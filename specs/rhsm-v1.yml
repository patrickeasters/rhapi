openapi: 3.0.1
info:
  title: RHSM-API
  description: API for Red Hat Subscription Management
  version: 1.158.0
servers:
- url: https://api.access.redhat.com/management/v1
security:
- Bearer: []
paths:
  /allocations:
    get:
      tags:
      - allocation
      summary: List all allocations for a user
      description: The default and max number of results in a response are 100.
      operationId: listAllocations
      parameters:
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: list of allocations
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/Allocation'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
      - allocation
      summary: Create Satellite by name
      description: |2-

        Version 6.5 (most recent version of Satellite)

        The default success response will be 200.
      operationId: createSatellite
      parameters:
      - name: Name
        in: query
        description: must be less than 100 characters and use only numbers, letters,
          underscores, hyphens, and periods
        required: true
        schema:
          type: string
      responses:
        200:
          description: CreateSatellite200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/AllocationDetails'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /allocations/{AllocationUUID}:
    get:
      tags:
      - allocation
      summary: Get an allocation by UUID
      description: System, RHUI, Hypervisor are unsupported allocation types
      operationId: showAllocation
      parameters:
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: Show more details about a allocation
        schema:
          type: string
          enum:
          - entitlements
      responses:
        200:
          description: ShowAllocation200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/AllocationDetails'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
    delete:
      tags:
      - allocation
      summary: Remove allocation profile
      description: |-
        The default success response will be 204

        System, RHUI, Hypervisor are unsupported allocation types
      operationId: removeAllocation
      parameters:
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: |-
          Deleting a subscription allocation can have significant impacts on your hosts and activation keys.
          We require a force parameter to make sure the delete operation is intentional.
        required: true
        schema:
          type: boolean
          enum:
          - true
      responses:
        204:
          description: Successfully removed
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        504:
          description: GatewayTimeout error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /allocations/{AllocationUUID}/entitlements:
    post:
      tags:
      - allocation
      summary: Attach entitlement to allocation
      description: |-
        The default success response will be 200.

        System, RHUI, Hypervisor are unsupported allocation types
      operationId: attachEntitlementAllocation
      parameters:
      - name: pool
        in: query
        required: true
        schema:
          type: string
      - name: quantity
        in: query
        description: quantity you want to attach
        schema:
          type: integer
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: AttachEntitlement200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/AllocationDetails'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /allocations/{AllocationUUID}/entitlements/{EntitlementUUID}:
    put:
      tags:
      - allocation
      summary: Update attached entitlement to allocation
      description: |-
        The default success response will be 200.

        System, RHUI, Hypervisor are unsupported allocation types
      operationId: updateEntitlementAllocation
      parameters:
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      - name: EntitlementUUID
        in: path
        required: true
        schema:
          type: string
      - name: quantity
        in: query
        description: |-
          maxItem: quantity must be less than or equal to the maximum number of allowed entitlements in the entitlement pool
          minItem: 1
        schema:
          type: integer
      responses:
        200:
          description: UpdateEntitlement200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/AllocationDetails'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /allocations/{AllocationUUID}/export:
    get:
      tags:
      - allocation
      summary: Trigger allocation manifest export
      description: |-
        Starts job to generate export for an allocation. To check the status of the export job visit the href in the response.

        System, RHUI, Hypervisor are unsupported allocation types. SAM 1.2 or lower, and Satellite 5 versions are unsupported.
      operationId: exportAllocation
      parameters:
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ExportAllocation200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/exportResponse'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /allocations/{AllocationUUID}/export/{ExportID}:
    get:
      tags:
      - allocation
      summary: Download allocation manifest
      description: |-
        Success response contains a zip file. The link is one-time download and expires after one try. Trigger export job to get another download link.

        Content-Type: application/zip
      operationId: getExportAllocation
      parameters:
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      - name: ExportID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: GetExportAllocation200 is the success response
          content:
            application/zip:
              schema:
                type: array
                items:
                  type: integer
        400:
          description: BadRequest error
          content:
            application/zip:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/zip:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/zip:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/zip:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/zip:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /allocations/{AllocationUUID}/exportJob/{ExportJobID}:
    get:
      tags:
      - allocation
      summary: Check status of allocation manifest export
      description: Returns export download link in response.
      operationId: exportJobAllocation
      parameters:
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      - name: ExportJobID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ExportJobAllocation200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/exportJobResponse'
        202:
          description: AcceptedExportJob202 is a response for accepted and in progress
            job
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ongoingExportJobResponse'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        406:
          description: NotAcceptable error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /allocations/{AllocationUUID}/pools:
    get:
      tags:
      - allocation
      summary: List all pools for an allocation
      description: System, RHUI, Hypervisor are unsupported allocation types
      operationId: listAllocationPools
      parameters:
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      - name: future
        in: query
        description: include future dated pools for satellite 6.3 or higher
        schema:
          type: boolean
          enum:
          - true
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ListAllocationPools200 is the success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poolsListMock'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /allocations/{AllocationUUID}/{EntitlementID}:
    delete:
      tags:
      - allocation
      summary: Remove entitlement from the allocation
      description: The default success response will be 204.
      operationId: removeAllocationEntitlement
      parameters:
      - name: AllocationUUID
        in: path
        required: true
        schema:
          type: string
      - name: EntitlementID
        in: path
        description: Remove an entitlement from an allocation
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successfully removed
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /cloud_access_providers/enabled:
    get:
      tags:
      - cloudaccess
      summary: List all enabled cloud access providers for a user
      description: |
        Returns the full list of all enabled Red Hat products and Cloud Access provider accounts/subscriptions associated with the user’s Red Hat account.
        - For Products that are expired `nextRenewal` field would be omitted and `totalQuantity` would be `0`.
        - Product objects can have `totalQuantity` field as `-1` indicating `Unlimited` quantity available.
        - The `nextRenewalDate` field of a Product has the format `YYYY-MM-DD`.
        - The `goldImageStatus` details are available for an account when the Provider is a certified Gold Image Provider and the account has been requested for gold image access. The `status` field of a goldImageStatus object could be `"Requested"`, `"Granted"` or `"Failed"`.
        - The `imageGroups` field is available for a product when the Provider is a certified Gold Image Provider, and the product has a gold image group available for it.
      operationId: listEnabledCloudAccessProviders
      responses:
        200:
          description: A JSON response object listing cloud access providers and their
            accounts and products.
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnabledCloudAccessProvider'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /cloud_access_providers/{ProviderShortName}/account:
    put:
      tags:
      - cloudaccess
      summary: Update provider account
      description: |
        Updates the account ID and/or nickname for a currently-enabled provider account. You can find a list of currently-enabled provider accounts and provider short names from the `/v1/cloud_access_providers/enabled` endpoint.
      operationId: UpdateProviderAccount
      parameters:
      - name: ProviderShortName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - id
              type: object
              properties:
                id:
                  type: string
                newID:
                  type: string
                newNickname:
                  type: string
        required: false
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
      x-codegen-request-body-name: account
  /cloud_access_providers/{ProviderShortName}/accounts:
    post:
      tags:
      - cloudaccess
      summary: Add accounts for a provider
      description: |
        Add up to `100` new provider accounts, with optional nicknames, to a currently-enabled provider for Red Hat Cloud Access. You can find a list of currently-enabled provider accounts and provider short names from the `/v1/cloud_access_providers/enabled` endpoint.
      operationId: AddProviderAccounts
      parameters:
      - name: ProviderShortName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddProviderAccount'
        required: false
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
      x-codegen-request-body-name: account
    delete:
      tags:
      - cloudaccess
      summary: Remove a provider account
      description: |
        Removes a currently-enabled provider account, including removing access to Gold Images, where applicable. You can find a list of currently-enabled provider accounts and provider short names from the `/v1/cloud_access_providers/enabled` endpoint.
      operationId: RemoveProviderAccount
      parameters:
      - name: ProviderShortName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - id
              type: object
              properties:
                id:
                  type: string
        required: false
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
      x-codegen-request-body-name: account
  /cloud_access_providers/{ProviderShortName}/accounts/{AccountID}/verification:
    put:
      tags:
      - cloudaccess
      summary: Verify a provider account
      description: |
        Verifies a cloud provider account for use with RHSM Auto Registration, which allows for cloud instances to automatically register with RHSM upon provisioning.

        Auto Registration is currently only available for the following cloud providers:
          - AWS
          - AWS GovCloud
          - ACS China


        This endpoint accepts a cloud instance identity document and signature from the cloud provider's metadata service, such as the [EC2 Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html) int the case of AWS.

        An HTTP 400 response will be returned if the cloud provider does not support automatic registration, the signature of the document cannot be verified, the cloud provider account has already been verified for a different Red Hat account, or if the account in the instance metadata does not match the provided account ID.

        An HTTP 204 response will be returned if the account has been successfully verified. Attempts to verify an account that is already verified will return an HTTP 204 response with no changes being made.
      operationId: VerifyProviderAccount
      parameters:
      - name: ProviderShortName
        in: path
        required: true
        schema:
          type: string
          enum:
          - AWS
          - AGOV
          - ACN
      - name: AccountID
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - identity
              - signature
              type: object
              properties:
                identity:
                  type: string
                  description: base64-encoded cloud instance metadata
                signature:
                  type: string
                  description: base64-encoded cloud instance metadata signature
        required: false
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
      x-codegen-request-body-name: account
  /cloud_access_providers/{ProviderShortName}/goldimage:
    post:
      tags:
      - cloudaccess
      summary: Enable Gold image access
      description: |
        Requests access to Red Hat Gold Images, where available, for currently-enabled products and provider accounts. Customers can request Red Hat Gold Images for account IDs and product image groups listed in the `/v1/cloud_access_providers/enabled` endpoint using the provider short name listed in the same response. After the request has been accepted for processing, gold image status for accounts can be checked in the `/v1/cloud_access_providers/enabled` endpoint response.
      operationId: EnableGoldImages
      parameters:
      - name: ProviderShortName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - accounts
              - images
              type: object
              properties:
                accounts:
                  type: array
                  items:
                    type: string
                images:
                  type: array
                  items:
                    type: string
        required: false
      responses:
        202:
          description: 'Accepted: The request has been accepted for processing, but
            the processing has not been completed.'
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
      x-codegen-request-body-name: goldImages
  /errata:
    get:
      tags:
      - errata
      summary: List all errata for a user's systems
      description: The default and max results in a response are 1000.
      operationId: listErrata
      parameters:
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: ListErrata200 is the success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myErrataListMock'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /errata/cset/{ContentSet}/arch/{Arch}:
    get:
      tags:
      - errata
      summary: Get all the errata for the specified content set and arch
      description: Limit is the number of results in a response. The default limit
        is 50 and max limit is 100.
      operationId: listErrataByContentSetArch
      parameters:
      - name: ContentSet
        in: path
        required: true
        schema:
          type: string
      - name: Arch
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: ListErrataByContentSetArch200 is the success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contentSetArchMock'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /errata/{AdvisoryID}:
    get:
      tags:
      - errata
      summary: Get the details of an advisory
      description: This will get the details of an advisory specified by its advisoryID.
      operationId: showErratum
      parameters:
      - name: AdvisoryID
        in: path
        description: unique identifier for a Red Hat advisory
        required: true
        schema:
          type: string
      responses:
        200:
          description: ShowErratum200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ErratumDetails'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /errata/{AdvisoryID}/packages:
    get:
      tags:
      - errata
      summary: List all packages for an advisory
      description: The default and max results in a response are 50.
      operationId: listErratumPackages
      parameters:
      - name: AdvisoryID
        in: path
        description: unique identifier for a Red Hat advisory
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: ListErratumPackages200 is the success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pkgListMock'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /errata/{AdvisoryID}/systems:
    get:
      tags:
      - errata
      summary: List all systems for an advisory
      description: The default and max results in a response are 1000.
      operationId: listErratumSystems
      parameters:
      - name: AdvisoryID
        in: path
        description: unique identifier for a Red Hat advisory
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: ListErratumSystems200 is the success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/systemListMock'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /images/cset/{ContentSet}:
    get:
      tags:
      - images
      summary: List available images in a content set
      description: |
        List all the available images in a given content set. The content set parameter is expected to be
         properly formatted (for example rhel-8-for-x86_64-baseos-isos). And the user requesting the endpoint
        is expected to have Download permission (UGC). If the user is entitled to an image, a "downloadHref" attribute is added in the image response object which links to image download API. The list is paginated by default to 25 results in a response and goes to maximum 100 results in a response. Use pagination by setting offset and limit url parameters (valid integer values).
      operationId: listImagesByContentSet
      parameters:
      - name: ContentSet
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of list items in a page
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: A JSON response object containing image listing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ImageInContentSet'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /images/{checksum}/download:
    get:
      tags:
      - images
      summary: Download an image by its SHA256 checksum
      description: |
        Find an image by its SHA256 checksum and generate a download link with a short-lived expiration. It is expected for users to obtain a new download link every time an image is downloaded and to not store the link for more than several minutes. If the user has "Download Software and Updates" permissions and a valid subscription for the image, they will receive a HTTP 307 redirect to the location on the Red Hat CDN. Clients can either follow the HTTP redirect or find the download URL in the response body.
      operationId: downloadImage
      parameters:
      - name: checksum
        in: path
        required: true
        schema:
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        307:
          description: redirect to download image on the Red Hat CDN
          headers:
            Location:
              description: URL to obtain the image
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/DownloadLink'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /packages/cset/{ContentSet}/arch/{Arch}:
    get:
      tags:
      - packages
      summary: Get all the packages for the specified content set and arch.
      description: The default and max results in a response are 50 and 100 respectively.
      operationId: listPackagesByContentSetArch
      parameters:
      - name: ContentSet
        in: path
        required: true
        schema:
          type: string
      - name: Arch
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      - name: filter
        in: query
        style: form
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - latest
      responses:
        200:
          description: ListPackagesByContentSetArch200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/pkgContentSetArch'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /packages/{Checksum}:
    get:
      tags:
      - packages
      summary: Get the details of a package
      description: This will get the details of a package specified by its checksum.
      operationId: showPackage
      parameters:
      - name: Checksum
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ShowPackage200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/pkgDetails'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /packages/{checksum}/download:
    get:
      tags:
      - packages
      summary: Download a package by its SHA256 checksum
      description: |
        Find a package by its SHA256 checksum and generate a download link with a short-lived expiration. It is expected for users to obtain a new download link every time a package is downloaded and to not store the link for more than several minutes. If the user has "Download Software and Updates" permissions and a valid subscription for the package, they will receive an HTTP 307 redirect to the location on the Red Hat CDN. Clients can either follow the HTTP redirect or find the download URL in the response body.
      operationId: downloadPackage
      parameters:
      - name: checksum
        in: path
        required: true
        schema:
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        307:
          description: redirect to download package on the Red Hat CDN
          headers:
            Location:
              description: URL to obtain the package
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/DownloadLink'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /subscriptions:
    get:
      tags:
      - subscription
      summary: List all subscriptions for a user
      description: The default and max results in a response are 50.
      operationId: listSubscriptions
      parameters:
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: ListSubscriptions200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/ListResponse'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{SubscriptionNumber}/contentSets:
    get:
      tags:
      - subscription
      summary: List all content sets for a subscription
      description: The default and max results in a response are 1000.
      operationId: listSubContentSets
      parameters:
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      - name: SubscriptionNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ListSubContentSets200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContentSet'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{SubscriptionNumber}/systems:
    get:
      tags:
      - subscription
      summary: List all systems consuming a subscription
      description: The default and max results in a response are 100.
      operationId: listSubSystems
      parameters:
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      - name: SubscriptionNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ListSubSystems200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/SystemList'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /systems:
    get:
      tags:
      - system
      summary: List all systems for a user
      description: The default and max number of results in a response are 100.
      operationId: listSystems
      parameters:
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      - name: filter
        in: query
        description: Filter Systems by System Name
        schema:
          type: string
      - name: username
        in: query
        description: Filter Systems by a valid User Name, where User Name is the system
          owner and wildcard characters are not allowed
        schema:
          type: string
      responses:
        200:
          description: ListSystems200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/systemList'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /systems/{SystemUUID}:
    get:
      tags:
      - system
      summary: Get a system specified by UUID.
      description: Sam & Satellite systems are unsupported system types.
      operationId: showSystem
      parameters:
      - name: SystemUUID
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: Show more details about a system
        style: form
        explode: false
        schema:
          maxItems: 3
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - facts
            - entitlements
            - installedProducts
      responses:
        200:
          description: ShowSystem200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/System'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
    delete:
      tags:
      - system
      summary: Remove system profile
      description: The default success response will be 204
      operationId: removeSystem
      parameters:
      - name: SystemUUID
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successfully removed
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        504:
          description: GatewayTimeout error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /systems/{SystemUUID}/entitlements:
    post:
      tags:
      - system
      summary: Attach entitlement to system
      description: |-
        The default success response will be 200.

        Sam & Satellite systems are unsupported system types.
      operationId: attachEntitlement
      parameters:
      - name: SystemUUID
        in: path
        required: true
        schema:
          type: string
      - name: pool
        in: query
        required: true
        schema:
          type: string
      - name: quantity
        in: query
        description: quantity you want to attach
        schema:
          type: integer
      responses:
        200:
          description: AttachedEntitlement200 is the success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    $ref: '#/components/schemas/System'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /systems/{SystemUUID}/errata:
    get:
      tags:
      - system
      summary: List all applicable errata for a system
      description: The default and max number of results in a response are 100.
      operationId: listSystemErrata
      parameters:
      - name: SystemUUID
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: list of advisories
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErratumForSystem'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /systems/{SystemUUID}/packages:
    get:
      tags:
      - system
      summary: List all packages for a system
      description: The default and max number of results in a response are 1000.
      operationId: listSystemPackages
      parameters:
      - name: SystemUUID
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      - name: errata_detail
        in: query
        description: Show errata details for packages
        schema:
          type: boolean
          enum:
          - true
          - false
      - name: upgradeable
        in: query
        description: Show upgradable packages only. Also accepts 'upgradable' as valid
          query.
        schema:
          type: boolean
          enum:
          - true
          - false
      - name: filter
        in: query
        description: Filter packages
        schema:
          type: string
      responses:
        200:
          description: list of packages
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/components/schemas/PackageForSystem'
                  pagination:
                    $ref: '#/components/schemas/APIPageParam'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /systems/{SystemUUID}/pools:
    get:
      tags:
      - system
      summary: List all pools for a system
      description: The default and max number of results in a response are 50.
      operationId: listSystemPools
      parameters:
      - name: SystemUUID
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: max number of results you want
        schema:
          type: integer
      - name: offset
        in: query
        description: index from which you want next items
        schema:
          type: integer
      responses:
        200:
          description: ListSystemPools200 is the success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poolsListMock'
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
  /systems/{SystemUUID}/{EntitlementID}:
    delete:
      tags:
      - system
      summary: Remove entitlement from the system
      description: The default success response will be 204.
      operationId: removeSystemEntitlement
      parameters:
      - name: SystemUUID
        in: path
        required: true
        schema:
          type: string
      - name: EntitlementID
        in: path
        description: Remove an entitlement from a system
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successfully removed
          content: {}
        400:
          description: BadRequest error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        401:
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        403:
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        404:
          description: NotFound error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
        500:
          description: InternalServerError error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ErrorDetails'
components:
  schemas:
    APIPageParam:
      type: object
      properties:
        count:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
      description: APIPageParam details the pagination parameters in APIResponse
    AddProviderAccount:
      type: object
      properties:
        id:
          type: string
        nickname:
          type: string
      description: An account to be added
    Allocation:
      title: Allocation is an entity that consumes entitlements. Also referred as
        a Distributor.
      type: object
      properties:
        entitlementQuantity:
          type: integer
        name:
          type: string
        type:
          type: string
        url:
          type: string
        uuid:
          type: string
        version:
          type: string
    AllocationDetails:
      type: object
      properties:
        contentAccessMode:
          type: string
        createdBy:
          type: string
        createdDate:
          $ref: '#/components/schemas/Date'
        entitlementsAttached:
          $ref: '#/components/schemas/EntitlementsAttachedResponse'
        entitlementsAttachedQuantity:
          type: integer
        lastModified:
          $ref: '#/components/schemas/Date'
        name:
          type: string
        type:
          type: string
        uuid:
          type: string
        version:
          type: string
      description: details of a subscription allocation
    ContentSet:
      title: ContentSet represent a contentset for the listContentSets API Response.
      type: object
      properties:
        arch:
          type: string
        enabled:
          type: boolean
        label:
          type: string
        name:
          type: string
        type:
          type: string
    Date:
      type: string
      description: Date represents the date format used for API returns
      example: 2006-01-02T15:04:05.000Z
    DetailResponse:
      title: DetailResponse is the user-friendly response from the service.
      type: object
      properties:
        contractNumber:
          type: string
        endDate:
          $ref: '#/components/schemas/Date'
        pools:
          type: array
          items:
            $ref: '#/components/schemas/Pool'
        quantity:
          type: string
        sku:
          type: string
        startDate:
          $ref: '#/components/schemas/Date'
        status:
          type: string
        subscriptionName:
          type: string
        subscriptionNumber:
          type: string
    DownloadLink:
      type: object
      properties:
        expiration:
          type: string
          description: time at which the download link expires (in UTC)
          example: 2006-01-02T15:04:05.000Z
        filename:
          type: string
          description: filename of the file on the download link
          example: filename-1.2.3-1.x86_64.rpm
        href:
          type: string
          description: URL to obtain the image
          example: https://access.cdn.redhat.com/content/origin/files/sha256/64/643e706cf7db9e93e706637af92d80eb58377dd0c64ac1e9ce6a72700aa04c2a/rhel-8.1-x86_64-boot.iso?_auth_=1582920605_7e8153e1bdc2f46636653e2efb17bc65
    EnabledCloudAccessProvider:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/EnabledProviderAccount'
        name:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/EnabledProduct'
        shortName:
          type: string
      description: Enabled Cloud Access Provider details including products and accounts.
    EnabledProduct:
      type: object
      properties:
        enabledQuantity:
          type: integer
        imageGroups:
          type: array
          items:
            type: string
        name:
          type: string
        nextRenewal:
          $ref: '#/components/schemas/ShortDate'
        sku:
          type: string
        totalQuantity:
          type: integer
      description: Enabled Product represents a cloud access provider product
    EnabledProviderAccount:
      required:
      - dateAdded
      - id
      - nickname
      type: object
      properties:
        dateAdded:
          $ref: '#/components/schemas/Date'
        goldImageStatus:
          type: array
          items:
            $ref: '#/components/schemas/GoldImageStatus'
        id:
          type: string
        nickname:
          type: string
        verified:
          type: boolean
          description: verification status for RHSM Auto Registration (only displayed
            for supported cloud providers)
      description: Enabled Provider Account represents a cloud access provider account
    EntitlementsAttachedResponse:
      type: object
      properties:
        reason:
          type: string
        valid:
          type: boolean
        value:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementsAttachedResponseValue'
      description: EntitlementsAttachedResponse wraps data obtained for EntitlementsAttached
        and sends metadata about it using helpers.OptionalResult
    EntitlementsAttachedResponseValue:
      type: object
      properties:
        contractNumber:
          type: string
        entitlementQuantity:
          type: integer
        id:
          type: string
        sku:
          type: string
      description: EntitlementsAttachedResponseValue represents the Value field in
        the EntitlementsAttachedResponse
    ErrataCount:
      type: object
      properties:
        bugfixCount:
          type: integer
        enhancementCount:
          type: integer
        securityCount:
          type: integer
      description: ErrataCount is the errata information for a System
    ErratumDetails:
      type: object
      properties:
        affectedProducts:
          type: array
          items:
            type: string
        bugzillas:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        copyrightYear:
          type: string
        cves:
          type: string
        description:
          type: string
        id:
          type: string
        issued:
          $ref: '#/components/schemas/Date'
        lastUpdated:
          $ref: '#/components/schemas/Date'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        severity:
          type: string
        solution:
          type: string
        summary:
          type: string
        synopsis:
          type: string
        type:
          type: string
        typeSeverity:
          type: string
    ErratumForSystem:
      type: object
      properties:
        href:
          type: string
        id:
          type: string
        published:
          $ref: '#/components/schemas/Date'
        severity:
          type: string
        synopsis:
          type: string
        type:
          type: string
      description: an erratum listed for a system
    ErratumInContentSet:
      type: object
      properties:
        advisoryId:
          type: string
        href:
          type: string
        publishDate:
          $ref: '#/components/schemas/Date'
        severity:
          type: string
        synopsis:
          type: string
        type:
          type: string
      description: ErratumInContentSet contains information on an erratum listed in
        a content set
    ErrorDetails:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      description: ErrorDetails details the Error in ErrorResponse
    GoldImageStatus:
      type: object
      properties:
        description:
          type: string
          description: Description of the provider image group
          example: Red Hat Enterprise Linux
        name:
          type: string
          description: Name of the requested provider image group
          example: RHEL
        status:
          type: string
          description: Status of Gold Image Request
          example: Requested
      description: Gold Image Status Details of a cloud access provider account for
        an image provider.
    ImageInContentSet:
      type: object
      properties:
        arch:
          type: string
        checksum:
          type: string
        datePublished:
          $ref: '#/components/schemas/Date'
        downloadHref:
          type: string
        filename:
          type: string
        imageName:
          type: string
      description: Image Details in a content set image listing.
    ListResponse:
      type: array
      description: |-
        ListResponse is the actual collection of subscription details that gets
        rendered
      items:
        $ref: '#/components/schemas/DetailResponse'
    MyErratum:
      type: object
      properties:
        advisoryId:
          type: string
        affectedSystemCount:
          type: integer
        details:
          type: string
        publishDate:
          $ref: '#/components/schemas/Date'
        synopsis:
          type: string
        systems:
          type: string
        type:
          type: string
      description: MyErratum contains erratum information that affects at least one
        system
    PackageDetail:
      type: object
      properties:
        arch:
          type: string
        checksum:
          type: string
        contentSets:
          type: array
          items:
            type: string
        details_url:
          type: string
        epoch:
          type: integer
        filename:
          type: string
        name:
          type: string
        release:
          type: string
        repoTags:
          type: array
          items:
            type: string
        summary:
          type: string
        version:
          type: string
      description: PackageDetail wraps an errata package and adds a RefURL
    PackageForSystem:
      type: object
      properties:
        advisories:
          type: array
          items:
            type: object
            properties:
              advisory:
                type: string
              url:
                type: string
        arch:
          type: string
        epoch:
          type: integer
        errataCount:
          type: integer
        name:
          type: string
        release:
          type: string
        version:
          type: string
      description: package installed on a system
    Pool:
      type: object
      properties:
        consumed:
          type: integer
        id:
          type: string
        quantity:
          type: integer
        type:
          type: string
      description: Pool represents pool information that matter for the detail list
    PoolDetail:
      type: object
      properties:
        contractNumber:
          type: string
        endDate:
          $ref: '#/components/schemas/Date'
        entitlementsAvailable:
          type: integer
        id:
          type: string
        serviceLevel:
          type: string
        sku:
          type: string
        startDate:
          $ref: '#/components/schemas/Date'
        subscriptionName:
          type: string
        subscriptionNumber:
          type: string
      description: PoolDetail is an entry in the system/allocation pools listing
    Reference:
      type: object
      properties:
        href:
          type: string
        id:
          type: string
        title:
          type: string
        type:
          type: string
      description: Reference contains a reference to an external item
    ShortDate:
      type: string
      description: ShortDate represents the short date format used for API returns
        where time precision is not needed
      example: 2006-01-02
    System:
      title: System is an entity that consumes entitlements. Also referred as a Consumer.
      type: object
      properties:
        entitlementCount:
          type: integer
        entitlementStatus:
          type: string
        errataCounts:
          $ref: '#/components/schemas/ErrataCount'
        hostname:
          type: string
        href:
          type: string
        lastCheckin:
          $ref: '#/components/schemas/Date'
        name:
          type: string
        type:
          type: string
        username:
          type: string
        uuid:
          type: string
    SystemList:
      type: object
      properties:
        complianceStatus:
          type: string
        details:
          type: string
        entitlementQuantity:
          type: integer
        lastCheckin:
          $ref: '#/components/schemas/Date'
        systemName:
          type: string
        totalEntitlementQuantity:
          type: integer
        type:
          type: string
        uuid:
          type: string
      description: SystemList is the result of the get system list API
    contentSetArchMock:
      type: object
      properties:
        body:
          type: array
          items:
            $ref: '#/components/schemas/ErratumInContentSet'
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    exportJobResponse:
      type: object
      properties:
        exportID:
          type: string
        href:
          type: string
    exportResponse:
      type: object
      properties:
        exportJobID:
          type: string
        href:
          type: string
    myErrataListMock:
      type: object
      properties:
        body:
          type: array
          items:
            $ref: '#/components/schemas/MyErratum'
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    ongoingExportJobResponse:
      type: object
      properties:
        message:
          type: string
    pkgContentSetArch:
      type: object
      properties:
        arch:
          type: string
        buildDate:
          $ref: '#/components/schemas/Date'
        buildHost:
          type: string
        checksum:
          type: string
        contentSets:
          type: array
          items:
            type: string
        description:
          type: string
        downloadHref:
          type: string
        epoch:
          type: string
        group:
          type: string
        href:
          type: string
        license:
          type: string
        name:
          type: string
        release:
          type: string
        size:
          type: integer
        summary:
          type: string
        version:
          type: string
    pkgDetails:
      type: object
      properties:
        arch:
          type: string
        buildDate:
          $ref: '#/components/schemas/Date'
        buildHost:
          type: string
        checksum:
          type: string
        contentSets:
          type: array
          items:
            type: string
        description:
          type: string
        epoch:
          type: string
        group:
          type: string
        href:
          type: string
        license:
          type: string
        name:
          type: string
        release:
          type: string
        size:
          type: integer
        summary:
          type: string
        version:
          type: string
    pkgListMock:
      type: object
      properties:
        body:
          type: array
          items:
            $ref: '#/components/schemas/PackageDetail'
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    poolsListMock:
      type: object
      properties:
        body:
          type: array
          items:
            $ref: '#/components/schemas/PoolDetail'
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    systemList:
      type: array
      description: systemList is a System Slice
      items:
        $ref: '#/components/schemas/System'
    systemListMock:
      type: object
      properties:
        body:
          type: array
          items:
            $ref: '#/components/schemas/System'
        pagination:
          $ref: '#/components/schemas/APIPageParam'
  responses:
    Accepted:
      description: 'Accepted: The request has been accepted for processing, but the
        processing has not been completed.'
      content: {}
    BadRequest:
      description: BadRequest error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
    Forbidden:
      description: Forbidden error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
    GatewayTimeout:
      description: GatewayTimeout error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
    InternalServerError:
      description: InternalServerError error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
    NoContent:
      description: No Content
      content: {}
    NotAcceptable:
      description: NotAcceptable error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
    NotFound:
      description: NotFound error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
    Unauthorized:
      description: Unauthorized error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
  securitySchemes:
    Bearer:
      type: apiKey
      description: Bearer token for authorized user
      name: Authorization
      in: header
